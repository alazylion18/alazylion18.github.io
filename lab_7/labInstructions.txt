In this lab, we will work through what it means to use a remote API to acquire information from an external source. The source, UMD.io, has agreed to grant us requests from browsers; this is not always the case, as it requires special server configuration to permit browser requests.
Lab Setup Instructions

    Grading Note: Late submissions will be docked 2 points.
    You will submit a link to your Github Pages repository for this lab as so: username.github.io/lab_7
    Pull the class repository and update your files
    Copy lab_7_remote_data into your Pages repository and rename it lab_7
    You should end up with a folder containing an index.html file and a lab_styles.css file
    Turn on your live server and open the lab files in your browser.
    Please open a tab to docs.umd.io  (Links to an external site.)
    Browse the documentation for the remote repository and find the link for bus routes.


Lab Instructions

    Find the GET endpoint for your new bus route data source in docs.umd.io (Links to an external site.)
        The start of the link will look like https://api.umd.io (Links to an external site.)
        It will have more routes than that base path
    Use your new endpoint in the fetch request to GET data into your application
    Add a then statement that logs out your response data and returns it to the next step
    Add a Then statement which makes an array of route data for use and returns
    Add a Then statement that lists bus routes by name and id in an unordered list in the HTML of your page
    Add a Then statement that lets you put the name of a bus route you select from the list on the page.
        Literally, choose with your eyes a route, ie: 113 or 133 or etc., no clicking is required
        Then "find" that route number in your array.
        You will probably need to use a .find function for this. You can find the documentation at MDN.
        Change the title "UMD Bus Routes" to "UMD Bus Route [route number] [route name]" using javascript and your retrieved data.
        Please do not type the name by hand to solve this.
        Pass your response object to your next step
        Sample BEFORE screencap feat unmodified name
        before screencap says UMD Bus Routes
        sample AFTER screencap with MADE UP route name (please filter or find your own route name)After screencap has a made up route name
    Log your response object out again at the bottom of your then chain.
    Extremely Bonus Marks (2, 12/10): Use string matching to edit the title property so that it does not contain the same data as the bus route id.
